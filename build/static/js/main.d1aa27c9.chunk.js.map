{"version":3,"sources":["img/logo.jpg","layouts/Header.js","components/Card.js","layouts/Board.js","layouts/Footer.js","layouts/Game.js","index.js"],"names":["module","exports","Header","className","backgroundStyle","background","bgImg","backgroundColor","backgroundSize","Card","props","imgStyles","isDiscovered","push","boxStyles","enable","cardWrapper","onClick","click","id","join","src","url","alt","style","Board","cards","map","card","key","Math","floor","random","Footer","Game","state","isFirstMove","isRoundOver","currentChoice","name","count","fetchData","a","fetch","response","json","result","prepareData","console","log","data","tab1","JSON","stringify","tab2","parse","i","length","randomIndex","setState","hideCards","Promise","resolve","reject","setTimeout","then","res","forEach","removeCards","id1","id2","filter","handleClick","index","findIndex","this","win","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d1aa27c9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5f2d9065.jpg\";","import React from 'react';\nimport '../styles/Header.scss';\n\nconst Header = () => (\n  <h1 className=\"header__heading\">\n    Memory App\n  </h1>\n)\n\nexport default Header;","import React from \"react\";\nimport \"../styles/Card.scss\";\n\nimport bgImg from '../img/logo.jpg';\n\nconst backgroundStyle = {\n    background: `url(${bgImg}) no-repeat center center/cover`,\n    backgroundColor: '#eb1c24',\n    backgroundSize: '100%'\n}\n\nconst Card = props => {\n  const imgStyles = [\"card__img\"];\n  if (props.isDiscovered) imgStyles.push(\"card__img--show\");\n  \n  const boxStyles = [\"card\"];\n  if(!props.enable) boxStyles.push('card--disabled')\n\n  const cardWrapper = (\n    <div onClick={() => props.click(props.id)} className=\"card__card-wrapper\">\n      <img className={imgStyles.join(\" \")} src={props.url} alt=\"w\" />\n    </div>\n  );\n\n  return (<div className={boxStyles.join(\" \")} style={backgroundStyle}>\n   {props.enable && cardWrapper}\n  </div>);\n};\n\nexport default Card;\n","import React from 'react';\nimport '../styles/Board.scss';\n\nimport Card from '../components/Card';\n\nconst Board = props => {\n\n  const cards = props.cards.map(card => (\n    <Card key={Math.floor(Math.random()*100000)}\n          id={card.id}\n          url={card.url} \n          isDiscovered={card.isDiscovered}\n          click={props.click}\n          enable={card.enable}\n          />\n  ));\n\n\n  \n  return(\n    <>\n      {cards}\n    </>\n  )\n}\n\nexport default Board;","import React from 'react';\nimport '../styles/Footer.scss';\n\n\nconst Footer = () => (\n  <>\n    <p className=\"footer__copyright\">Copyright &copy; 1999</p>\n  </>\n);\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport \"../styles/Game.scss\";\n\nimport Header from \"./Header\";\nimport Board from \"./Board\";\nimport Footer from \"./Footer\";\n\nclass Game extends Component {\n  state = {\n    cards: [],\n    isFirstMove: true,\n    isRoundOver: true,\n    currentChoice: {\n      name: '',\n      id: ''    \n    },\n    count: 0\n  };\n\n  fetchData = async () => {\n    try {\n      const response = await fetch(\"/data/cards.json\");\n      const result = await response.json();\n      this.prepareData(result);\n    } catch (error) {\n      console.log(`Error in fetchData: ${error}`);\n    }\n  };\n\n  prepareData = data => {\n    // copy objects\n    const tab1 = JSON.stringify(data);\n    const tab2 = JSON.stringify(data);\n    let cards = [...JSON.parse(tab1),...JSON.parse(tab2)];\n   \n    // Shuffle xD\n    for (let i = 0; i < cards.length; i++) {\n      const randomIndex = Math.floor(Math.random() * cards.length);\n      [cards[i], cards[randomIndex]] = [cards[randomIndex], cards[i]];\n    }\n\n    cards = cards.map(card => {\n      const id = Math.floor(Math.random()*1000000);\n      card.id = `id${id}`;\n      return card;\n    });\n\n    this.setState({ cards });\n  };\n\n  hideCards = () => {\n    new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve(1)\n      }, 2000);\n    })\n    .then(res => {\n      const cards = [...this.state.cards];\n      cards.forEach(card => card.isDiscovered = false);\n      this.setState({\n        cards,\n        isRoundOver: true,\n        currentChoice: {name: '', id: ''}\n      });\n\n    })\n\n\n  }\n\n  removeCards = (id1, id2) => {\n\n    new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve()\n      }, 1000);\n    })\n    .then(res => {\n      const cards = [...this.state.cards];\n      cards.filter(card => {\n        if(card.id === id1 || card.id === id2){\n          card.enable = false;\n        }\n        return card;\n      });\n    });\n\n  }\n\n  handleClick = id => {\n\n    if(this.state.isRoundOver){\n      const cards = [...this.state.cards];\n      const index = cards.findIndex(card => card.id === id);\n      const name = cards[index].name;\n      cards[index].isDiscovered = true;\n\n      if(name === this.state.currentChoice.name && id !== this.state.currentChoice.id){\n        // Name cards is the same, and ids are different*\n        this.removeCards(id, this.state.currentChoice.id);\n      }\n\n      this.setState((state) => ({\n        cards,\n        isFirstMove: !state.isFirstMove,\n        isRoundOver: state.isFirstMove,\n        currentChoice: state.isFirstMove ? {id, name} : state.currentChoice,\n        count: !state.isFirstMove ? state.count + 1 : state.count\n      }))\n  \n      if(!this.state.isFirstMove){\n        this.hideCards();\n      }\n\n\n    }\n\n\n\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  render() {\n\n    const isEnable = this.state.cards.findIndex(card => card.enable);\n    let win;\n    if(isEnable === -1 && this.state.count > 0){\n      win = (<h2>Wygrałeś w {this.state.count} rundzie</h2>);\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"container\">\n          <header className=\"header\">\n            <Header />\n            {win}\n          </header>\n          <main className=\"board\">\n            <Board cards={this.state.cards} click={this.handleClick} />\n          </main>\n          <footer className=\"footer\">\n            <Footer />\n          </footer>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './layouts/Game';\n\nimport './styles/Index.scss';\n\nReactDOM.render(<Game />, document.getElementById('root'));\n\n"],"sourceRoot":""}